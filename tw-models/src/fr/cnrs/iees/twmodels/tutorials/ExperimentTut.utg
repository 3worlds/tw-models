treegraph // saved by OmugiGraphExporter on Wed Aug 24 11:00:15 AEST 2022

	edge_factory = java.lang.String(au.edu.anu.twcore.root.TwConfigFactory)
	node_factory = java.lang.String(au.edu.anu.twcore.root.TwConfigFactory)
// TREE
3worlds Prj1
	authors = au.edu.anu.omugi.collections.tables.StringTable(([3]"I.D. Davies","S. Banks","G.J. Cary"))
	built-by = java.lang.String(ian (24 Aug 2022))
	contacts = au.edu.anu.omugi.collections.tables.StringTable(([1]"ian.davies@anu.edu.au"))
	importSnippet = au.edu.anu.omugi.collections.tables.StringTable(([8]"static code.utilities.Utilities3A.*","java.util.List","fr.cnrs.iees.omhtk.utils.Tuple","java.util.Map","java.util.HashMap","fr.cnrs.iees.uit.space.Distance","java.util.Comparator","java.util.ArrayList"))
	precis = java.lang.String(Males and females, overlapping generations and genetics in a disturbance prone landscape)
	publication = au.edu.anu.omugi.collections.tables.StringTable(([1]"Davies, I.D., Cary, G.J., Landguth, E.L., Lindenmayer, D.B. and Banks, S.C., 2016. Implications of recurrent disturbance for genetic diversity. Ecology and evolution, 6(4), pp.1181-1196."))
	version = java.lang.String(0.0.8)
	predefined *categories*
		categorySet *organisation*
			category *assemblage*
			category *atomic*
		record AVEphemeral
			field birthDate
				description = java.lang.String(creation time of an ephemeral entity)
				interval = fr.cnrs.iees.omhtk.utils.Interval(]-∞,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
			field age
				description = java.lang.String(time since creation of an ephemeral entitiy)
				interval = fr.cnrs.iees.omhtk.utils.Interval([0.0,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
		record AVPopulation
			field count
				description = java.lang.String(the number of ephemeral entities)
				range = au.edu.anu.omhtk.util.IntegerRange(0..*)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				units = java.lang.String(#)
			field nRemoved
				description = java.lang.String(the number of an ephemeral entities removed)
				range = au.edu.anu.omhtk.util.IntegerRange(0..*)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				units = java.lang.String(#)
			field nAdded
				description = java.lang.String(the number of an ephemeral entities added)
				range = au.edu.anu.omhtk.util.IntegerRange(0..*)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				units = java.lang.String(#)
		relationType *returnsTo*
			lifespan = fr.cnrs.iees.twcore.constants.LifespanType(permanent)
		categorySet *systemElements*
			category *life cycle*
			category *group*
			category *relation*
			category *component*
			category *arena*
		relationType *parentTo*
			lifespan = fr.cnrs.iees.twcore.constants.LifespanType(permanent)
		categorySet *lifespan*
			category *ephemeral*
			category *permanent*
	dataDefinition dDef
		dimensioner polyandrousLimit
			size = java.lang.Integer(8)
		record animalCnts
			dynamic = java.lang.Boolean(false)
			generatedClassName = java.lang.String(animalCnts)
			table alleles
				dataElementType = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				description = java.lang.String()
				range = au.edu.anu.omhtk.util.IntegerRange(0..9)
				units = java.lang.String()
			field mDNA
				description = java.lang.String()
				range = au.edu.anu.omhtk.util.IntegerRange(0..99)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				units = java.lang.String()
			field isFemale
				description = java.lang.String()
				type = fr.cnrs.iees.twcore.constants.DataElementType(Boolean)
		dimensioner nAlleleTypes
			size = java.lang.Integer(10)
		dimensioner nLoci
			size = java.lang.Integer(10)
		dimensioner ydim
			size = java.lang.Integer(100)
		dimensioner demey
			size = java.lang.Integer(33)
		record glbCnt
			dynamic = java.lang.Boolean(false)
			generatedClassName = java.lang.String(glbCnt)
			field isDispersalShort
				description = java.lang.String()
				type = fr.cnrs.iees.twcore.constants.DataElementType(Boolean)
			field ageMature
				description = java.lang.String()
				interval = fr.cnrs.iees.omhtk.utils.Interval(]-∞,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
			field isDispersalInformed
				description = java.lang.String()
				type = fr.cnrs.iees.twcore.constants.DataElementType(Boolean)
			field d1
				description = java.lang.String()
				interval = fr.cnrs.iees.omhtk.utils.Interval(]-∞,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
			field rateMutation
				description = java.lang.String()
				interval = fr.cnrs.iees.omhtk.utils.Interval(]-∞,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
			field isHabitatDynamic
				description = java.lang.String()
				type = fr.cnrs.iees.twcore.constants.DataElementType(Boolean)
			field d2
				description = java.lang.String()
				interval = fr.cnrs.iees.omhtk.utils.Interval(]-∞,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
			field maxMates
				description = java.lang.String()
				range = au.edu.anu.omhtk.util.IntegerRange(MIN_INTEGER..*)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				units = java.lang.String()
			field k2
				description = java.lang.String()
				interval = fr.cnrs.iees.omhtk.utils.Interval(]-∞,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
			field k1
				description = java.lang.String()
				interval = fr.cnrs.iees.omhtk.utils.Interval(]-∞,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
			field ageSenescent
				description = java.lang.String()
				interval = fr.cnrs.iees.omhtk.utils.Interval(]-∞,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
			field isHabitatFragmented
				description = java.lang.String()
				type = fr.cnrs.iees.twcore.constants.DataElementType(Boolean)
			field r2
				description = java.lang.String()
				interval = fr.cnrs.iees.omhtk.utils.Interval(]-∞,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
			field r1
				description = java.lang.String()
				interval = fr.cnrs.iees.omhtk.utils.Interval(]-∞,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
		record glbDrv
			dynamic = java.lang.Boolean(true)
			generatedClassName = java.lang.String(glbDrv)
			table habitatLayer
				dataElementType = fr.cnrs.iees.twcore.constants.DataElementType(Boolean)
				description = java.lang.String()
				range = au.edu.anu.omhtk.util.IntegerRange(MIN_INTEGER..*)
		dimensioner xdim
			size = java.lang.Integer(100)
		dimensioner demex
			size = java.lang.Integer(33)
		dimensioner ploidy
			size = java.lang.Integer(2)
		record glbDec
			dynamic = java.lang.Boolean(false)
			generatedClassName = java.lang.String(glbDec)
			field nMales
				description = java.lang.String()
				range = au.edu.anu.omhtk.util.IntegerRange(MIN_INTEGER..*)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				units = java.lang.String()
			field population
				description = java.lang.String()
				range = au.edu.anu.omhtk.util.IntegerRange(MIN_INTEGER..*)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				units = java.lang.String()
			field Ht
				description = java.lang.String()
				interval = fr.cnrs.iees.omhtk.utils.Interval(]-∞,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
			field Hs
				description = java.lang.String()
				interval = fr.cnrs.iees.omhtk.utils.Interval(]-∞,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
			table alleleSumTable
				dataElementType = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				description = java.lang.String()
				range = au.edu.anu.omhtk.util.IntegerRange(0..*)
				units = java.lang.String()
			table mDNASums
				dataElementType = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				range = au.edu.anu.omhtk.util.IntegerRange(MIN_INTEGER..*)
				units = java.lang.String()
			table preCullLayer
				dataElementType = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				description = java.lang.String()
				range = au.edu.anu.omhtk.util.IntegerRange(MIN_INTEGER..*)
				units = java.lang.String()
			field nFemalesEligible
				description = java.lang.String()
				range = au.edu.anu.omhtk.util.IntegerRange(MIN_INTEGER..*)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				units = java.lang.String()
			table mfa
				dataElementType = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				description = java.lang.String()
				range = au.edu.anu.omhtk.util.IntegerRange(MIN_INTEGER..*)
				units = java.lang.String()
			table allocationLayer
				dataElementType = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				description = java.lang.String()
				range = au.edu.anu.omhtk.util.IntegerRange(0..*)
				units = java.lang.String()
			field nFemalesPregnant
				description = java.lang.String()
				range = au.edu.anu.omhtk.util.IntegerRange(MIN_INTEGER..*)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				units = java.lang.String()
			field Fst
				description = java.lang.String()
				interval = fr.cnrs.iees.omhtk.utils.Interval(]-∞,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
			table heterozygosity
				dataElementType = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				description = java.lang.String()
				interval = fr.cnrs.iees.omhtk.utils.Interval(]-∞,+∞[)
				precision = java.lang.Double(0.0)
				units = java.lang.String()
			field fractionCulled
				description = java.lang.String()
				interval = fr.cnrs.iees.omhtk.utils.Interval(]-∞,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
			field fractionPregnant
				description = java.lang.String()
				interval = fr.cnrs.iees.omhtk.utils.Interval(]-∞,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
			table mDNAMostFrequent
				dataElementType = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				description = java.lang.String()
				range = au.edu.anu.omhtk.util.IntegerRange(MIN_INTEGER..*)
				units = java.lang.String()
			table spaceDemand
				dataElementType = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				description = java.lang.String()
				interval = fr.cnrs.iees.omhtk.utils.Interval(]0.0,+∞[)
				precision = java.lang.Double(0.0)
				units = java.lang.String()
			field nFemales
				description = java.lang.String()
				range = au.edu.anu.omhtk.util.IntegerRange(MIN_INTEGER..*)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				units = java.lang.String()
			table disperers
				dataElementType = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				description = java.lang.String()
				range = au.edu.anu.omhtk.util.IntegerRange(0..*)
				units = java.lang.String()
			table populationAgeClasses
				dataElementType = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				description = java.lang.String()
				range = au.edu.anu.omhtk.util.IntegerRange(MIN_INTEGER..*)
				units = java.lang.String()
			table demeLayer
				dataElementType = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				description = java.lang.String()
				range = au.edu.anu.omhtk.util.IntegerRange(MIN_INTEGER..*)
				units = java.lang.String()
			field population1
				description = java.lang.String()
				range = au.edu.anu.omhtk.util.IntegerRange(MIN_INTEGER..*)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				units = java.lang.String()
			field population2
				description = java.lang.String()
				range = au.edu.anu.omhtk.util.IntegerRange(MIN_INTEGER..*)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				units = java.lang.String()
			table populationLayer
				dataElementType = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				description = java.lang.String()
				range = au.edu.anu.omhtk.util.IntegerRange(MIN_INTEGER..*)
				units = java.lang.String()
			field occupancy
				description = java.lang.String()
				interval = fr.cnrs.iees.omhtk.utils.Interval(]-∞,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
			table culledLayer
				dataElementType = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				description = java.lang.String()
				range = au.edu.anu.omhtk.util.IntegerRange(0..*)
				units = java.lang.String()
			table metaPopAlleleSums
				dataElementType = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				description = java.lang.String()
				range = au.edu.anu.omhtk.util.IntegerRange(MIN_INTEGER..*)
				units = java.lang.String()
		dimensioner nMDNAAlleles
			size = java.lang.Integer(100)
		record animalDrv
			dynamic = java.lang.Boolean(true)
			generatedClassName = java.lang.String(animalDrv)
			field yLocation
				description = java.lang.String()
				interval = fr.cnrs.iees.omhtk.utils.Interval(]-∞,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
			field xLocation
				description = java.lang.String()
				interval = fr.cnrs.iees.omhtk.utils.Interval(]-∞,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
			field ageInYears
				description = java.lang.String()
				interval = fr.cnrs.iees.omhtk.utils.Interval(]-∞,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
			field isNewBorn
				description = java.lang.String()
				type = fr.cnrs.iees.twcore.constants.DataElementType(Boolean)
			field isMature
				description = java.lang.String()
				type = fr.cnrs.iees.twcore.constants.DataElementType(Boolean)
		record animalDecs
			dynamic = java.lang.Boolean(false)
			generatedClassName = java.lang.String(animalDecs)
			table maleAlleles
				dataElementType = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				range = au.edu.anu.omhtk.util.IntegerRange(MIN_INTEGER..*)
				units = java.lang.String()
			field nMates
				description = java.lang.String()
				range = au.edu.anu.omhtk.util.IntegerRange(MIN_INTEGER..*)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				units = java.lang.String()
		dimensioner nAgeClasses
			size = java.lang.Integer(13)
	experiment expt
		nReplicates = java.lang.Integer(5)
		treatment trt
		design dsgn
			type = fr.cnrs.iees.twcore.constants.ExperimentDesignType(crossFactorial)
	system sys1
		constantClass = java.lang.String(code.sys1.generated.GlbCnt)
		decoratorClass = java.lang.String(code.sys1.generated.GlbDec)
		driverClass = java.lang.String(code.sys1.generated.GlbDrv)
		dynamics sim1
			stoppingCondition stCd1
				endTime = fr.cnrs.iees.twcore.constants.DateTimeType(100)
				subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.stop.SimpleStoppingCondition)
			timeline tmLn1
				longestTimeUnit = fr.cnrs.iees.twcore.constants.TimeUnits(UNSPECIFIED)
				scale = fr.cnrs.iees.twcore.constants.TimeScaleType(ARBITRARY)
				shortestTimeUnit = fr.cnrs.iees.twcore.constants.TimeUnits(UNSPECIFIED)
				timeOrigin = fr.cnrs.iees.twcore.constants.DateTimeType(0)
				timer step
					dt = java.lang.Long(1)
					nTimeUnits = java.lang.Integer(1)
					subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.timer.ClockTimer)
					timeUnit = fr.cnrs.iees.twcore.constants.TimeUnits(UNSPECIFIED)
					process p1B
						function RelConceive
							functionSnippet = au.edu.anu.omugi.collections.tables.StringTable(([14]"		if (focalDec.nMates < maxMates) {","			focalDec.nMates++;","			// requires jvm arg -ea","			assert (isFemale);","			assert (!other_isFemale);","			// Genetics","			int father = focalDec.nMates - 1;","			for (int ploid = 0; ploid < other_alleles.size(1); ploid++)","				for (int locus = 0; locus < other_alleles.size(0); locus++) {","					int allele = other_alleles.getByInt(locus, ploid);","					focalDec.maleAlleles.setByInt(allele, locus, ploid, father);","				}","","		}"))
							type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(ChangeRelationState)
							userClassName = java.lang.String(code.sys1.generated.RelConceive)
					process p1A
						function RelFindmate
							functionSnippet = au.edu.anu.omugi.collections.tables.StringTable(([10]"		if (isNewBorn)","			return false;","		if (isFemale && (ageInYears < ageMature))","			return false;","		if (!other_isFemale && (other_ageInYears < ageMature))","			return false;","		if (isFemale && !other_isFemale) {","			return true;","		} else","			return false;"))
							type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(RelateToDecision)
							userClassName = java.lang.String(code.sys1.generated.RelFindmate)
					process p2A
						function CountSuccessfullMating
							functionSnippet = au.edu.anu.omugi.collections.tables.StringTable(([5]"		if (isFemale && isMature) {","			arenaDec.nFemalesEligible++;","			if (nMates > 0)","				arenaDec.nFemalesPregnant++;","		}"))
							type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(ChangeState)
							userClassName = java.lang.String(code.sys1.generated.CountSuccessfullMating)
					process p3A
						function AniSetPreDispersalDensity
							functionSnippet = au.edu.anu.omugi.collections.tables.StringTable(([5]"		if (!isNewBorn) { // don't included undispersed new born in counts.","			int ix = (int) (xLocation / habitatCellSize);","			int iy = (int) (yLocation / habitatCellSize);","			arenaDec.allocationLayer.setByInt(arenaDec.allocationLayer.getByInt(ix, iy) + 1, ix, iy); // (isFemale)","		}"))
							type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(ChangeState)
							userClassName = java.lang.String(code.sys1.generated.AniSetPreDispersalDensity)
					process p5
						function AniSetPreCullingDensity
							functionSnippet = au.edu.anu.omugi.collections.tables.StringTable(([4]"		// set values of population density for all individuals including new born","		int ix = (int) (xLocation / habitatCellSize);","		int iy = (int) (yLocation / habitatCellSize);","		arenaDec.preCullLayer.setByInt(arenaDec.preCullLayer.getByInt(ix, iy) + 1, ix, iy);"))
							type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(ChangeState)
							userClassName = java.lang.String(code.sys1.generated.AniSetPreCullingDensity)
					process p4
						function AniDispersal
							functionSnippet = au.edu.anu.omugi.collections.tables.StringTable(([45]"		if (isNewBorn) {// only disperse new born","			double meanDistance = 1000.0;","			if (isDispersalShort)","				meanDistance = 100.0;","			int w = habitatLayer.size(0);","			int h = habitatLayer.size(1);","			if (!isDispersalInformed) {","				double distance = -(meanDistance) * Math.log(1 - random.nextDouble());","				double direction = random.nextDouble() * (2 * Math.PI);","				double tx = xLocation + distance * Math.cos(direction);","				double ty = yLocation + distance * Math.sin(direction);","				focalDrv.xLocation = tx;","				focalDrv.yLocation = ty;","			} else {","				List<Tuple<Double, Double, Double>> sites = new ArrayList<>();","				int nTrials = 3;","				for (int i = 0; i < nTrials; i++) {","					double distance = -(meanDistance) * Math.log(1 - random.nextDouble());","					double direction = random.nextDouble() * (2 * Math.PI);","					double tx = xLocation + distance * Math.cos(direction);","					double ty = yLocation + distance * Math.sin(direction);","					int ix = gridLocation(tx, w, habitatCellSize);","					int iy = gridLocation(ty, h, habitatCellSize);","					double demand = arenaDec.allocationLayer.getByInt(ix, iy);","					double resource = k2;","					if (habitatLayer.getByInt(ix, iy))","						resource = k1;","					double resourceAvailable = resource - demand;","					sites.add(new Tuple<Double, Double, Double>(tx, ty, resourceAvailable));","				}","				sites.sort(new Comparator<Tuple<Double, Double, Double>>() {","					@Override","					public int compare(Tuple<Double, Double, Double> o1, Tuple<Double, Double, Double> o2) {","						return o2.getThird().compareTo(o1.getThird());","					}","				});","				// Select site with the least population pressure","				Tuple<Double, Double, Double> location = sites.get(0);","				focalDrv.xLocation = location.getFirst();","				focalDrv.yLocation = location.getSecond();","				int ix = gridLocation(location.getFirst(), w, habitatCellSize);","				int iy = gridLocation(location.getSecond(), h, habitatCellSize);","				arenaDec.allocationLayer.setByInt(1 + arenaDec.allocationLayer.getByInt(ix, iy), ix, iy);","			}","		}"))
							type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(ChangeState)
							userClassName = java.lang.String(code.sys1.generated.AniDispersal)
					process p3
						function AniDeath
							functionSnippet = au.edu.anu.omugi.collections.tables.StringTable(([11]"		if (!isNewBorn) { // assume death rate is included in birth rates","			int ix = (int) (xLocation / habitatCellSize);","			int iy = (int) (yLocation / habitatCellSize);","			double d = d2;","			if (habitatLayer.getByInt(ix, iy))","				d = d1;","			if (ageInYears >= ageSenescent)","				d = 1.0;","			return decider.decide(d);","		} else","			return false;"))
							type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(DeleteDecision)
							userClassName = java.lang.String(code.sys1.generated.AniDeath)
					process p2
						function AniNBirths
							functionSnippet = au.edu.anu.omugi.collections.tables.StringTable(([9]"		if (nMates > 0) {// nMates>0 seems an unnecessary check.","			int ix = (int) (xLocation / habitatCellSize);","			int iy = (int) (yLocation / habitatCellSize);","			double r = r2;","			if (habitatLayer.getByInt(ix, iy))","				r = r1;","			return r;","		} else","			return 0;"))
							relateToProduct = java.lang.Boolean(false)
							type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(CreateOtherDecision)
							userClassName = java.lang.String(code.sys1.generated.AniNBirths)
							function AniNewBornInit
								functionSnippet = au.edu.anu.omugi.collections.tables.StringTable(([25]"		otherDrv.isMature = false;","		otherDrv.isNewBorn = true;","		otherDrv.ageInYears = 0.0;","		otherDrv.xLocation = xLocation;","		otherDrv.yLocation = yLocation;","		// even sex ratio","		otherCnt.isFemale = random.nextBoolean();","		// Genetics","		otherCnt.mDNA = mDNA;","		// a clumsy way to get this number","		int maxAllele = alleleSumTable.size(3);","		int father = random.nextInt(nMates);","		for (int ploid = 0; ploid < alleles.size(1); ploid++)","			for (int locus = 0; locus < alleles.size(0); locus++) {","				int allele;","				if (random.nextBoolean())","					allele = alleles.getByInt(locus, ploid);","				else","					allele = maleAlleles.getByInt(locus, ploid, father);","				if (random.nextDouble() < rateMutation)","					allele = random.nextInt(maxAllele);","","				otherCnt.alleles.setByInt(allele, locus, ploid);","			}",""))
								type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(SetOtherInitialState)
								userClassName = java.lang.String(code.sys1.generated.AniNewBornInit)
					process p8
						dataTracker trkDemeLayer
							sampleSize = java.lang.String()
							subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.tracking.DataTracker2D)
						dataTracker trkAllocationLayer
							sampleSize = java.lang.String()
							subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.tracking.DataTracker2D)
						dataTracker trkAgeClass
							sampleSize = java.lang.String()
							subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.tracking.DataTracker0D)
						dataTracker trkMfa
							sampleSize = java.lang.String()
							subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.tracking.DataTracker2D)
						dataTracker trkSexRatio
							sampleSize = java.lang.String()
							subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.tracking.DataTracker0D)
						dataTracker trkFst
							sampleSize = java.lang.String()
							subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.tracking.DataTracker0D)
						function CalculateGenetics
							functionSnippet = au.edu.anu.omugi.collections.tables.StringTable(([95]"		int maxLoci = focalDec.metaPopAlleleSums.size(0);","		int maxAlleleId = focalDec.metaPopAlleleSums.size(1);","		{","			double sumH = 0;","			for (int l = 0; l < maxLoci; l++) {","				int total = 0;","				for (int a = 0; a < maxAlleleId; a++) {","					int sum = focalDec.metaPopAlleleSums.getByInt(l, a);","					total += sum;","				}","				double sumSqrs = 0;","				if (total > 0)","					for (int a = 0; a < maxAlleleId; a++) {","						int sum = focalDec.metaPopAlleleSums.getByInt(l, a);","						double f = (double) sum / (double) total;","						sumSqrs += (f * f);","					}","				sumH += (1.0 - sumSqrs);","			}","			focalDec.Ht = sumH / maxLoci;","		}","","		// sub-population H and the most frequent allele for the first locus","		boolean error = false;","		int w = demeLayer.size(0);","		int h = demeLayer.size(1);","		double sumHs = 0;","		double sumN = 0;","		int counter = 0;","		for (int x = 0; x < w; x++)","			for (int y = 0; y < h; y++) {","","				int demePopulation = focalDec.demeLayer.getByInt(x, y);","				// set missing values","				focalDec.mfa.setByInt(-1, x, y);","				focalDec.mDNAMostFrequent.setByInt(-1, x, y);","				if (demePopulation > 0) {","					// mitochondrial DNA - only one locus","					{","						int total = 0;","						int largestFirstLocus = 0;","						int mfaLocus0 = -1;","","						for (int a = 0; a < focalDec.mDNASums.size(2); a++) {","							int sum = focalDec.mDNASums.getByInt(x, y, a);","							total += sum;","							if (sum > largestFirstLocus) {","								largestFirstLocus = sum;","								mfaLocus0 = a;","							}","						}","						focalDec.mDNAMostFrequent.setByInt(mfaLocus0, x, y);","					}","","					int largestFirstLocus = 0;","					int mfaLocus0 = -1;","					double sumH = 0;","					for (int l = 0; l < maxLoci; l++) {","						int total = 0;","						for (int a = 0; a < maxAlleleId; a++) {","","							int sum = focalDec.alleleSumTable.getByInt(x, y, l, a);","							total += sum;","							if (l == 0) {","								if (sum > largestFirstLocus) {","									largestFirstLocus = sum;","									mfaLocus0 = a;","								}","							}","						}","","						if (total > 0) {","							double sumSqrs = 0;","							for (int a = 0; a < maxAlleleId; a++) {","								int sum = focalDec.alleleSumTable.getByInt(x, y, l, a);","								double f = (double) sum / (double) total;","								sumSqrs += (f * f);","							}","							sumH += (1.0 - sumSqrs);","						}","					}","					double meanH = sumH / maxLoci;","					focalDec.heterozygosity.setByInt(meanH, x, y);","					focalDec.mfa.setByInt(mfaLocus0, x, y);","","					sumHs += meanH * demePopulation;","					sumN += demePopulation;","				}","			}","","		if (sumN > 0) {","			focalDec.Hs = sumHs / sumN;","			focalDec.Fst = (focalDec.Ht - focalDec.Hs) / focalDec.Ht;","		}",""))
							type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(ChangeState)
							userClassName = java.lang.String(code.sys1.generated.CalculateGenetics)
						dataTracker trkOccupancy
							sampleSize = java.lang.String()
							subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.tracking.DataTracker0D)
						dataTracker trkHs
							sampleSize = java.lang.String()
							subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.tracking.DataTracker0D)
						dataTracker trkHabitatLayer
							sampleSize = java.lang.String()
							subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.tracking.DataTracker2D)
						dataTracker trkHt
							sampleSize = java.lang.String()
							subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.tracking.DataTracker0D)
						function SysSetOutputValues
							functionSnippet = au.edu.anu.omugi.collections.tables.StringTable(([17]"		int totalKilled = 0;","		int totalPreCull = 0;","		for (int x = 0; x < populationLayer.size(0); x++)","			for (int y = 0; y < populationLayer.size(1); y++) {","				int p1 = preCullLayer.getByInt(x, y);","				totalPreCull += p1;","				int p2 = populationLayer.getByInt(x, y);","				int killed = p1 - p2;","				totalKilled += killed;","				focalDec.culledLayer.setByInt(killed, x, y);","			}","		focalDec.fractionCulled = (double) totalKilled / (double) totalPreCull;","		double mx = habitatLayer.size(0) * habitatLayer.size(1) * (k1 + k2) / 2.0;","		focalDec.occupancy = population / mx;","","//		allow div by zero - chartfx handles this","		focalDec.fractionPregnant = (double) nFemalesPregnant / (double) nFemalesEligible;"))
							type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(ChangeState)
							userClassName = java.lang.String(code.sys1.generated.SysSetOutputValues)
						dataTracker trkPreCullLayer
							sampleSize = java.lang.String()
							subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.tracking.DataTracker2D)
						dataTracker trkPopulation
							sampleSize = java.lang.String()
							subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.tracking.DataTracker0D)
						dataTracker trkHeterozygosity
							sampleSize = java.lang.String()
							subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.tracking.DataTracker2D)
						dataTracker trkHtHs
							sampleSize = java.lang.String()
							subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.tracking.DataTracker0D)
						dataTracker trkMetaPopSeries
							sampleSize = java.lang.String()
							subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.tracking.DataTracker0D)
						dataTracker trkFstHtHs
							sampleSize = java.lang.String()
							subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.tracking.DataTracker0D)
						dataTracker trkFractionCulled
							sampleSize = java.lang.String()
							subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.tracking.DataTracker0D)
						dataTracker trkCulledLayer
							sampleSize = java.lang.String()
							subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.tracking.DataTracker2D)
						dataTracker trkMDNAmfa
							sampleSize = java.lang.String()
							subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.tracking.DataTracker2D)
						dataTracker trkPopulationLayer
							sampleSize = java.lang.String()
							subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.tracking.DataTracker2D)
						dataTracker trkFractionPregnant
							sampleSize = java.lang.String()
							subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.tracking.DataTracker0D)
					process p7
						function RecordAlleles
							functionSnippet = au.edu.anu.omugi.collections.tables.StringTable(([18]"		int mxLoci = alleles.size(0);","		int mxPloidy = alleles.size(1);","		int ix = (int) (xLocation / demeCellSize);","		int iy = (int) (yLocation / demeCellSize);","","		int sumMDNA = arenaDec.mDNASums.getByInt(ix, iy, mDNA) + 1;","		arenaDec.mDNASums.setByInt(sumMDNA, ix, iy, mDNA);","","		for (int locus = 0; locus < mxLoci; locus++)","			for (int ploid = 0; ploid < mxPloidy; ploid++) {","				int allele = alleles.getByInt(locus, ploid);","","				int metaSum = arenaDec.metaPopAlleleSums.getByInt(locus, allele) + 1;","				arenaDec.metaPopAlleleSums.setByInt(metaSum, locus, allele);","","				int sum = arenaDec.alleleSumTable.getByInt(ix, iy, locus, allele) + 1;","				arenaDec.alleleSumTable.setByInt(sum, ix, iy, locus, allele);","			}"))
							type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(ChangeState)
							userClassName = java.lang.String(code.sys1.generated.RecordAlleles)
						function AniAge
							functionSnippet = au.edu.anu.omugi.collections.tables.StringTable(([25]"		int ix = (int) (xLocation / habitatCellSize);","		int iy = (int) (yLocation / habitatCellSize);","		// record final population density layer","		arenaDec.populationLayer.setByInt(arenaDec.populationLayer.getByInt(ix, iy) + 1, ix, iy);","		int age = (int) ageInYears;","		age = Math.min(age, populationAgeClasses.size() - 1);","		arenaDec.populationAgeClasses.setByInt(arenaDec.populationAgeClasses.getByInt(age) + 1, age);","		arenaDec.population++;","		if (habitatLayer.getByInt(ix, iy))","			arenaDec.population1++;","		else","			arenaDec.population2++;","		if (isFemale)","			arenaDec.nFemales++;","		else","			arenaDec.nMales++;","		// update the demeLayer table","		ix = (int) (xLocation / demeCellSize);","		iy = (int) (yLocation / demeCellSize);","		arenaDec.demeLayer.setByInt(arenaDec.demeLayer.getByInt(ix, iy) + 1, ix, iy);","		// age individuals - could be done at start of loop","		focalDrv.ageInYears += 1;","		focalDrv.isNewBorn = false;","		if (focalDrv.ageInYears >= ageMature)","			focalDrv.isMature = true;"))
							type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(ChangeState)
							userClassName = java.lang.String(code.sys1.generated.AniAge)
					process p6
						function AniCull
							functionSnippet = au.edu.anu.omugi.collections.tables.StringTable(([13]"		// remove (probabilistically) individuals from populations above carrying","		// capacity.","		int ix = (int) (xLocation / habitatCellSize);","		int iy = (int) (yLocation / habitatCellSize);","		double k = k2;","		if (habitatLayer.getByInt(ix, iy))","			k = k1;","		double n = preCullLayer.getByInt(ix, iy);","		if (n > k) {","			double p = (n - k) / n;","			return decider.decide(p);","		} else","			return false;"))
							type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(DeleteDecision)
							userClassName = java.lang.String(code.sys1.generated.AniCull)
					process p1
						function SysSetHabitatLayer
							functionSnippet = au.edu.anu.omugi.collections.tables.StringTable(([83]"		int time = (int) (t - 1);","		if ((time == 0) || isHabitatDynamic) {","			// make new pattern","			// assumptions:","			// 1) a square landscape","			// 2) good:bad habitat ratio of 1:1","			// 3) Torus topology","			// clumped = 0.95; fragmented 0.01","			double fracBad = 0.5;","			double pContagion = 0.95;","			if (isHabitatFragmented)","				pContagion = 0.01;","			focalDrv.habitatLayer.fillWith(true);// set all to 'good'","			int w = habitatLayer.size(0);","			int h = habitatLayer.size(1);","			Map<String, List<Integer>> goodList = new HashMap<>();","			List<String> keys = new ArrayList<>();","			for (int x = 0; x < w; x++)","				for (int y = 0; y < h; y++) {","					List<Integer> l = new ArrayList<>();","					l.add(x);","					l.add(y);","					String key = new StringBuilder().append(x).append('-').append(y).toString();","					keys.add(key);","					goodList.put(key, l);","				}","","			boolean[][] visited = new boolean[w][h];","			int area = w * h;","			int quota = (int) (fracBad * area);","			int nBad = 0;","			while (nBad < quota) {","				double pSpread = 1.0;","				// ignition","				List<Integer> frontLineX = new ArrayList<>();","				List<Integer> frontLineY = new ArrayList<>();","				// select random starting point","				int idx = random.nextInt(keys.size());","				String key = keys.get(idx);","				keys.remove(idx);","				List<Integer> l = goodList.get(key);","				int x = l.get(0);","				int y = l.get(1);","				nBad++;","				focalDrv.habitatLayer.setByInt(false, x, y);","				frontLineX.add(x);","				frontLineY.add(y);","				visited[x][y] = true;","				while (!frontLineX.isEmpty() && nBad < quota) {","					pSpread = pSpread * pContagion;","					// spreadFrom","					List<Integer> newFrontLineX = new ArrayList<>();","					List<Integer> newFrontLineY = new ArrayList<>();","					for (int i = 0; i < frontLineX.size(); i++) {","						int sx = frontLineX.get(i);","						int sy = frontLineY.get(i);","						for (int dx = -1; dx <= 1; dx++)","							for (int dy = -1; dy <= 1; dy++)","								if (!(dy == 0 && dx == 0)) {","									int nx = sx + dx;","									if (nx < 0)","										nx += w;","									nx = nx % w;","									int ny = sy + dy;","									if (ny < 0)","										ny += h;","									ny = ny % h;","									if (!visited[nx][ny]) {","										if (random.nextDouble() < pSpread) {","											visited[nx][ny] = true;","											newFrontLineX.add(nx);","											newFrontLineY.add(ny);","											focalDrv.habitatLayer.setByInt(false, nx, ny);","										}","									}","								}","					}","					frontLineX = newFrontLineX;","					frontLineY = newFrontLineY;","					nBad += frontLineX.size();","				}","			}","		}"))
							type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(ChangeState)
							userClassName = java.lang.String(code.sys1.generated.SysSetHabitatLayer)
		initFunction SysInit
			functionSnippet = au.edu.anu.omugi.collections.tables.StringTable(([19]"		focalCnt.isDispersalShort = true;// short = 100; long = 1000","		focalCnt.isDispersalInformed = false;// informed - best of 3 trials","		focalCnt.isHabitatDynamic = true;// dynamic:every year; static: never","		focalCnt.isHabitatFragmented = false;// clumped or fragmented","		// Habitat optionally effects carrying capacity. No effect if equal","		focalCnt.k1 = 3; // [3.0;1.5]","		focalCnt.k2 = 1.5;","		// Habitat optionally effects reproduction rate. No effect if equal","		focalCnt.r1 = 0.8; // NOG: [3.0,1.5]; OG [0.8, 0.4]","		focalCnt.r2 =0.8;","		// Habitat optionally effects death rate. No effect if equal","		focalCnt.d1 = 0.22; // OG [0.22]; NOG [1.0]","		focalCnt.d2 = 0.22;","		// generation overlap","		focalCnt.ageMature = 1;","		focalCnt.ageSenescent = 12;// NOG [1]; OG [12]","		// genetics","		focalCnt.rateMutation = 0.0001;","		focalCnt.maxMates = 1;"))
			type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(SetInitialState)
			userClassName = java.lang.String(code.sys1.generated.SysInit)
		structure struc1
			relationType mateRelation
				lifeSpan = fr.cnrs.iees.twcore.constants.LifespanType(ephemeral)
			space landscape
				borderType = fr.cnrs.iees.twcore.constants.BorderListType(([4]"wrap","wrap","wrap","wrap"))
				precision = java.lang.Double(0.1)
				type = fr.cnrs.iees.twcore.constants.SpaceType(continuousFlatSurface)
				units = java.lang.String(m)
				x-limits = fr.cnrs.iees.omhtk.utils.Interval([0.0,10000.0[)
				y-limits = fr.cnrs.iees.omhtk.utils.Interval([0.0,10000.0[)
			componentType animalType
				constantClass = java.lang.String(code.sys1.generated.AnimalCnts)
				decoratorClass = java.lang.String(code.sys1.generated.AnimalDecs)
				driverClass = java.lang.String(code.sys1.generated.AnimalDrv)
				initialValues animal
					nInstances = java.lang.Integer(8000)
				initFunction AniInit
					functionSnippet = au.edu.anu.omugi.collections.tables.StringTable(([19]"		// random locations","		focalDrv.xLocation = random.nextDouble() * landscapeWidth;","		focalDrv.yLocation = random.nextDouble() * landscapeHeight;","		// Initial population is all new born","		focalDrv.isMature = false;","		focalDrv.isNewBorn = true;","		focalDrv.ageInYears = 0.0;","		// 50:50 sex ratio","		focalCnt.isFemale = random.nextBoolean();","		// Genetics","		int maxMDNAalleles = 100;","		focalCnt.mDNA = random.nextInt(maxMDNAalleles);","		int maxAlleleNumber = 10;","		for (int ploid = 0; ploid < alleles.size(1); ploid++)","			for (int locus = 0; locus < alleles.size(0); locus++) {","				int allele = random.nextInt(maxAlleleNumber);","				focalCnt.alleles.setByInt(allele, locus, ploid);","			}",""))
					type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(SetInitialState)
					userClassName = java.lang.String(code.sys1.generated.AniInit)
			categorySet animalSet
				category animalCat
					constantClass = java.lang.String(AnimalCat_Cnt)
					decoratorClass = java.lang.String(AnimalCat_Dec)
					driverClass = java.lang.String(AnimalCat_Drv)
	userInterface gui
		headless hl
			widget PopMapWriter
				asAverage = java.lang.Boolean(false)
				imageMagnify = java.lang.Integer(2)
				missingValueColour = au.edu.anu.twuifx.widgets.MissingValueColour(BLACK)
				missingValueMethod = au.edu.anu.twuifx.widgets.IsMissingValue(LT_MIN)
				palette = au.edu.anu.ymuit.ui.colour.PaletteTypes(BrownYellowGreen)
				sampleTimes = IntTable(([1]100))
				subclass = java.lang.String(au.edu.anu.twuifx.widgets.headless.HLMatrixWidget1)
				zRange = fr.cnrs.iees.omhtk.utils.Interval(]1.0,4.0[)
			widget FstWriter
				subclass = java.lang.String(au.edu.anu.twuifx.widgets.headless.HLTimeSeriesAnalysisWidget1)
			widget HsWriter
				subclass = java.lang.String(au.edu.anu.twuifx.widgets.headless.HLTimeSeriesAnalysisWidget1)
			widget HsMapWriter
				asAverage = java.lang.Boolean(false)
				imageMagnify = java.lang.Integer(6)
				missingValueColour = au.edu.anu.twuifx.widgets.MissingValueColour(BLACK)
				missingValueMethod = au.edu.anu.twuifx.widgets.IsMissingValue(LT_MIN)
				palette = au.edu.anu.ymuit.ui.colour.PaletteTypes(OrangeMauveBlue)
				sampleTimes = IntTable(([1]100))
				subclass = java.lang.String(au.edu.anu.twuifx.widgets.headless.HLMatrixWidget1)
				zRange = fr.cnrs.iees.omhtk.utils.Interval(]0.35,0.86[)
			widget HtWriter
				subclass = java.lang.String(au.edu.anu.twuifx.widgets.headless.HLTimeSeriesAnalysisWidget1)
			widget ctrl
				subclass = java.lang.String(au.edu.anu.twuifx.widgets.headless.HLControlWidget1)
			widget progress
				subclass = java.lang.String(au.edu.anu.twuifx.widgets.headless.HLProgressWidget1)

// CROSS-LINKS
[dataTracker:trkHs] sampleArena trks34 [system:sys1]
[dataTracker:trkHs] trackField trks35 [field:Hs]
[dataTracker:trkDemeLayer] trackTable trks36 [table:demeLayer]
	index = fr.cnrs.iees.twcore.constants.TrackerType(([1]"[0:32|0:32]"))
[dataTracker:trkDemeLayer] sampleArena trks37 [system:sys1]
[dataTracker:trkHt] sampleArena trks26 [system:sys1]
[dataTracker:trkHt] trackField trks28 [field:Ht]
[dataTracker:trkFractionCulled] sampleArena trks15 [system:sys1]
[dataTracker:trkFractionCulled] trackField trks16 [field:fractionCulled]
[table:metaPopAlleleSums] sizedBy x13 [dimensioner:nLoci]
	rank = java.lang.Integer(0)
[table:metaPopAlleleSums] sizedBy y12 [dimensioner:nAlleleTypes]
	rank = java.lang.Integer(1)
[dataTracker:trkPreCullLayer] trackTable trks20 [table:preCullLayer]
	index = fr.cnrs.iees.twcore.constants.TrackerType(([1]"[0:99|0:99]"))
[dataTracker:trkPreCullLayer] sampleArena trks19 [system:sys1]
[table:alleles] sizedBy x8 [dimensioner:nLoci]
	rank = java.lang.Integer(0)
[table:alleles] sizedBy y7 [dimensioner:ploidy]
	rank = java.lang.Integer(1)
[dataTracker:trkPopulationLayer] sampleArena trks17 [system:sys1]
[dataTracker:trkPopulationLayer] trackTable trks18 [table:populationLayer]
	index = fr.cnrs.iees.twcore.constants.TrackerType(([1]"[0:99|0:99]"))
[table:maleAlleles] sizedBy x9 [dimensioner:nLoci]
	rank = java.lang.Integer(0)
[table:maleAlleles] sizedBy y8 [dimensioner:ploidy]
	rank = java.lang.Integer(1)
[table:maleAlleles] sizedBy z [dimensioner:polyandrousLimit]
	rank = java.lang.Integer(2)
[table:populationAgeClasses] sizedBy x4 [dimensioner:nAgeClasses]
	rank = java.lang.Integer(0)
[dataTracker:trkFstHtHs] trackField trks64 [field:Hs]
[dataTracker:trkFstHtHs] trackField trks7 [field:Fst]
[dataTracker:trkFstHtHs] sampleArena trks57 [system:sys1]
[dataTracker:trkFstHtHs] trackField trks59 [field:Ht]
[widget:HtWriter] trackSeries trks31 [dataTracker:trkHt]
[dataTracker:trkSexRatio] sampleArena trks21 [system:sys1]
[dataTracker:trkSexRatio] trackField trks22 [field:nFemales]
[dataTracker:trkSexRatio] trackField trks23 [field:nMales]
[dataTracker:trkFst] trackField trks38 [field:Fst]
[dataTracker:trkFst] sampleArena trks39 [system:sys1]
[relationType:*returnsTo*] fromCategory frm2 [category:*component*]
[relationType:*returnsTo*] toCategory to2 [category:*component*]
[table:heterozygosity] sizedBy x10 [dimensioner:demex]
	rank = java.lang.Integer(0)
[table:heterozygosity] sizedBy y9 [dimensioner:demey]
	rank = java.lang.Integer(1)
[system:sys1] belongsTo bt3 [category:*permanent*]
[system:sys1] belongsTo bt2 [category:*assemblage*]
[system:sys1] belongsTo bt1 [category:*arena*]
[dataTracker:trkAllocationLayer] trackTable trks30 [table:allocationLayer]
	index = fr.cnrs.iees.twcore.constants.TrackerType(([1]"[0:99|0:99]"))
[dataTracker:trkAllocationLayer] sampleArena trks29 [system:sys1]
[table:populationLayer] sizedBy x3 [dimensioner:xdim]
	rank = java.lang.Integer(0)
[table:populationLayer] sizedBy y3 [dimensioner:ydim]
	rank = java.lang.Integer(1)
[dataTracker:trkHeterozygosity] sampleArena trks43 [system:sys1]
[dataTracker:trkHeterozygosity] trackTable trks44 [table:heterozygosity]
	index = fr.cnrs.iees.twcore.constants.TrackerType(([1]"[0:32|0:32]"))
[table:alleleSumTable] sizedBy alleles1 [dimensioner:nAlleleTypes]
	rank = java.lang.Integer(3)
[table:alleleSumTable] sizedBy x5 [dimensioner:demex]
	rank = java.lang.Integer(0)
[table:alleleSumTable] sizedBy y4 [dimensioner:demey]
	rank = java.lang.Integer(1)
[table:alleleSumTable] sizedBy loci [dimensioner:nLoci]
	rank = java.lang.Integer(2)
[relationType:mateRelation] toCategory to4 [category:*ephemeral*]
[relationType:mateRelation] toCategory to3 [category:animalCat]
[relationType:mateRelation] fromCategory from1 [category:animalCat]
[relationType:mateRelation] fromCategory from2 [category:*ephemeral*]
[dataTracker:trkMDNAmfa] sampleArena trks47 [system:sys1]
[dataTracker:trkMDNAmfa] trackTable trks48 [table:mDNAMostFrequent]
	index = fr.cnrs.iees.twcore.constants.TrackerType(([1]"[0:32|0:32]"))
[table:mDNAMostFrequent] sizedBy x11 [dimensioner:demex]
	rank = java.lang.Integer(0)
[table:mDNAMostFrequent] sizedBy y10 [dimensioner:demey]
	rank = java.lang.Integer(1)
[table:disperers] sizedBy x17 [dimensioner:xdim]
	rank = java.lang.Integer(1)
[table:disperers] sizedBy y16 [dimensioner:ydim]
	rank = java.lang.Integer(2)
[category:*ephemeral*] autoVar auto1 [record:AVEphemeral]
[dataTracker:trkOccupancy] trackField trks56 [field:occupancy]
[dataTracker:trkOccupancy] sampleArena trks58 [system:sys1]
[dataTracker:trkHabitatLayer] trackTable trks2 [table:habitatLayer]
	index = fr.cnrs.iees.twcore.constants.TrackerType(([1]"[0:99|0:99]"))
[dataTracker:trkHabitatLayer] sampleArena trks1 [system:sys1]
[dataTracker:trkHtHs] sampleArena trks40 [system:sys1]
[dataTracker:trkHtHs] trackField trks41 [field:Ht]
[dataTracker:trkHtHs] trackField trks42 [field:Hs]
[widget:FstWriter] trackSeries trks4 [dataTracker:trkFst]
[relationType:*parentTo*] fromCategory frm1 [category:*component*]
[relationType:*parentTo*] toCategory to1 [category:*component*]
[componentType:animalType] belongsTo bt7 [category:animalCat]
[componentType:animalType] belongsTo bt6 [category:*atomic*]
[componentType:animalType] belongsTo bt5 [category:*component*]
[componentType:animalType] belongsTo bt4 [category:*ephemeral*]
[dataTracker:trkCulledLayer] sampleArena trks13 [system:sys1]
[dataTracker:trkCulledLayer] trackTable trks14 [table:culledLayer]
	index = fr.cnrs.iees.twcore.constants.TrackerType(([1]"[0:99|0:99]"))
[category:*arena*] constants cnsts1 [record:glbCnt]
[category:*arena*] decorators decs1 [record:glbDec]
[category:*arena*] drivers drvs2 [record:glbDrv]
[dataTracker:trkMetaPopSeries] trackField trks63 [field:population2]
[dataTracker:trkMetaPopSeries] trackField trks6 [field:population]
[dataTracker:trkMetaPopSeries] sampleArena trks5 [system:sys1]
[dataTracker:trkMetaPopSeries] trackField trks61 [field:population1]
[table:spaceDemand] sizedBy x16 [dimensioner:xdim]
	rank = java.lang.Integer(1)
[table:spaceDemand] sizedBy y15 [dimensioner:ydim]
	rank = java.lang.Integer(2)
[widget:progress] trackTime trks3 [dynamics:sim1]
[dataTracker:trkAgeClass] trackTable trks10 [table:populationAgeClasses]
	index = fr.cnrs.iees.twcore.constants.TrackerType(([1]""))
[dataTracker:trkAgeClass] sampleArena trks11 [system:sys1]
[table:habitatLayer] sizedBy y [dimensioner:ydim]
	rank = java.lang.Integer(1)
[table:habitatLayer] sizedBy x [dimensioner:xdim]
	rank = java.lang.Integer(0)
[dataTracker:trkMfa] sampleArena trks45 [system:sys1]
[dataTracker:trkMfa] trackTable trks46 [table:mfa]
	index = fr.cnrs.iees.twcore.constants.TrackerType(([1]"[0:32|0:32]"))
[dataTracker:trkPopulation] sampleArena trks9 [system:sys1]
[dataTracker:trkPopulation] trackField trks12 [field:population]
[category:animalCat] constants cnsts2 [record:animalCnts]
[category:animalCat] drivers drvs1 [record:animalDrv]
[category:animalCat] decorators decs2 [record:animalDecs]
[process:p1B] dependsOn depsOn9 [process:p1A]
[process:p1B] appliesTo aplyTo12 [relationType:mateRelation]
[process:p1B] inSpace in4 [space:landscape]
	searchRadius = java.lang.Double(0.0)
[process:p1A] appliesTo aplyTo11 [relationType:mateRelation]
[process:p1A] inSpace in3 [space:landscape]
	searchRadius = java.lang.Double(200.0)
[process:p1A] dependsOn depsOn3 [process:p1]
[table:demeLayer] sizedBy x15 [dimensioner:demex]
	rank = java.lang.Integer(0)
[table:demeLayer] sizedBy y14 [dimensioner:demey]
	rank = java.lang.Integer(1)
[treatment:trt] treats dm [field:isDispersalInformed]
	rank = java.lang.Integer(2)
	valueNames = au.edu.anu.omugi.collections.tables.StringTable(([2]"uninf","inf"))
	values = au.edu.anu.omugi.collections.tables.StringTable(([2]"false","true"))
[treatment:trt] treats dd [field:isDispersalShort]
	rank = java.lang.Integer(1)
	valueNames = au.edu.anu.omugi.collections.tables.StringTable(([2]"short","long"))
	values = au.edu.anu.omugi.collections.tables.StringTable(([2]"true","false"))
[table:preCullLayer] sizedBy y6 [dimensioner:ydim]
	rank = java.lang.Integer(1)
[table:preCullLayer] sizedBy x7 [dimensioner:xdim]
	rank = java.lang.Integer(0)
[process:p2A] appliesTo aplyTo5 [category:animalCat]
[process:p2A] dependsOn depsOn6 [process:p2]
[process:p1] appliesTo aplyTo1 [category:*arena*]
[process:p2] dependsOn depsOn10 [process:p1B]
[process:p2] appliesTo aplyTo2 [category:animalCat]
[process:p2] inSpace in1 [space:landscape]
	searchRadius = java.lang.Double(0.0)
[process:p3] dependsOn depsOn2 [process:p2A]
[process:p3] appliesTo aplyTo3 [category:animalCat]
[process:p3] inSpace in2 [space:landscape]
	searchRadius = java.lang.Double(0.0)
[process:p4] inSpace in6 [space:landscape]
	searchRadius = java.lang.Double(0.0)
[process:p4] appliesTo aplyTo10 [category:animalCat]
[process:p4] dependsOn depsOn4 [process:p3A]
[process:p5] appliesTo aplyTo13 [category:animalCat]
[process:p5] dependsOn depsOn8 [process:p4]
[process:p6] inSpace in5 [space:landscape]
	searchRadius = java.lang.Double(0.0)
[process:p6] dependsOn depsOn11 [process:p5]
[process:p6] appliesTo aplyTo4 [category:animalCat]
[process:p7] appliesTo aplyTo9 [category:animalCat]
[process:p7] dependsOn depsOn5 [process:p6]
[process:p8] appliesTo aplyTo8 [category:*arena*]
[process:p8] dependsOn depsOn7 [process:p7]
[table:mDNASums] sizedBy z1 [dimensioner:nMDNAAlleles]
	rank = java.lang.Integer(2)
[table:mDNASums] sizedBy x12 [dimensioner:demex]
	rank = java.lang.Integer(0)
[table:mDNASums] sizedBy y11 [dimensioner:demey]
	rank = java.lang.Integer(1)
[widget:HsWriter] trackSeries trks49 [dataTracker:trkHs]
[category:*assemblage*] autoVar auto [record:AVPopulation]
[widget:HsMapWriter] trackSeries trks24 [dataTracker:trkHeterozygosity]
[table:allocationLayer] sizedBy y5 [dimensioner:ydim]
	rank = java.lang.Integer(1)
[table:allocationLayer] sizedBy x6 [dimensioner:xdim]
	rank = java.lang.Integer(0)
[process:p3A] appliesTo aplyTo6 [category:animalCat]
[process:p3A] dependsOn depsOn1 [process:p3]
[widget:PopMapWriter] trackSeries trks25 [dataTracker:trkPopulationLayer]
[table:mfa] sizedBy x14 [dimensioner:demex]
	rank = java.lang.Integer(0)
[table:mfa] sizedBy y13 [dimensioner:demey]
	rank = java.lang.Integer(1)
[dataTracker:trkFractionPregnant] sampleArena trks32 [system:sys1]
[dataTracker:trkFractionPregnant] trackField trks33 [field:fractionPregnant]
[table:culledLayer] sizedBy x1 [dimensioner:xdim]
	rank = java.lang.Integer(0)
[table:culledLayer] sizedBy y1 [dimensioner:ydim]
	rank = java.lang.Integer(1)
[space:landscape] coordinate y2 [field:yLocation]
	rank = java.lang.Integer(1)
[space:landscape] coordinate x2 [field:xLocation]
	rank = java.lang.Integer(0)
