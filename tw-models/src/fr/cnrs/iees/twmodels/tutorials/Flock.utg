treegraph // saved by OmugiGraphExporter on Tue Jun 08 11:07:27 CEST 2021

	edge_factory = java.lang.String(au.edu.anu.twcore.root.TwConfigFactory)
	node_factory = java.lang.String(au.edu.anu.twcore.root.TwConfigFactory)
// TREE
3worlds Flock
	authors = au.edu.anu.omugi.collections.tables.StringTable(([2]"Jacques Gignoux","Ian D. Davies"))
	built-by = java.lang.String(gignoux (23 mars 2022))
	contacts = au.edu.anu.omugi.collections.tables.StringTable(([2]"jacques.gignoux@upmc.fr","Ian.Davies@anu.edu.au"))
	importSnippet = au.edu.anu.omugi.collections.tables.StringTable(([1]"static code.utilities.BoidUtils.*"))
	precis = java.lang.String(Tutorial: Testing flocking behaviour of mobile components)
	publication = au.edu.anu.omugi.collections.tables.StringTable(([1]"https://en.wikipedia.org/wiki/Boids"))
	version = java.lang.String(demo)
	predefined *categories*
		categorySet *organisation*
			category *assemblage*
			category *atomic*
		record AVEphemeral
			field birthDate
				interval = fr.cnrs.iees.omhtk.utils.Interval(]-∞,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
				description = java.lang.String(creation time of an ephemeral entity)
			field age
				interval = fr.cnrs.iees.omhtk.utils.Interval([0.0,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
				description = java.lang.String(time since creation of an ephemeral entitiy)
		record AVPopulation
			field count
				range = au.edu.anu.omhtk.util.IntegerRange(0..*)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				description = java.lang.String(the number of ephemeral entities)				
				units = java.lang.String(#)
			field nRemoved
				range = au.edu.anu.omhtk.util.IntegerRange(0..*)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				units = java.lang.String(#)
				description = java.lang.String(the number of an ephemeral entities removed)				
			field nAdded
				range = au.edu.anu.omhtk.util.IntegerRange(0..*)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				units = java.lang.String(#)
				description = java.lang.String(the number of an ephemeral entities added)				
		categorySet *systemElements*
			category *life cycle*
			category *group*
			category *relation*
			category *component*
			category *arena*
		categorySet *lifespan*
			category *ephemeral*
			category *permanent*
	dataDefinition dDef
		record dec
			dynamic = java.lang.Boolean(false)
			generatedClassName = java.lang.String(dec)
			field sumY
				description = java.lang.String(Y location of barycentre of neighbours)
				interval = fr.cnrs.iees.omhtk.utils.Interval([0.0,1000.0])
				precision = java.lang.Double(0.001)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String(m)
			field sumX
				description = java.lang.String(X location of barycentre of neighbours)
				interval = fr.cnrs.iees.omhtk.utils.Interval([0.0,1000.0])
				precision = java.lang.Double(0.001)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String(m)
			field sepY
				description = java.lang.String()				
				interval = fr.cnrs.iees.omhtk.utils.Interval(]-∞,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
			field nLocal
				description = java.lang.String(number of boids within detection range)
				range = au.edu.anu.omhtk.util.IntegerRange(0..*)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				units = java.lang.String(#)
			field sepX
				description = java.lang.String()				
				interval = fr.cnrs.iees.omhtk.utils.Interval(]-∞,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
			field sumdX
				description = java.lang.String(sum of velocity in X of neighbours)
				interval = fr.cnrs.iees.omhtk.utils.Interval([0.0,+∞[)
				precision = java.lang.Double(0.001)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String(m/s)
			field sumdY
				description = java.lang.String(sum of velocity in Y of neighbours)
				interval = fr.cnrs.iees.omhtk.utils.Interval([0.0,+∞[)
				precision = java.lang.Double(0.001)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String(m/s)
			field avoidY
				description = java.lang.String(movement in Y to avoid collision with others)
				interval = fr.cnrs.iees.omhtk.utils.Interval([0.0,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String(m)
			field avoidX
				description = java.lang.String(movement in X to avoid collision with others)
				interval = fr.cnrs.iees.omhtk.utils.Interval([0.0,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String(m)
		record cnt
			dynamic = java.lang.Boolean(false)
			generatedClassName = java.lang.String(cnt)
			field safetyRange
				description = java.lang.String(minimal distance between birds)
				interval = fr.cnrs.iees.omhtk.utils.Interval([0.0,20.0])
				precision = java.lang.Double(0.001)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String(m)
			field maxForce
				description = java.lang.String()				
				interval = fr.cnrs.iees.omhtk.utils.Interval(]-∞,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
			field maxSpeed
				description = java.lang.String(speed of flight)
				interval = fr.cnrs.iees.omhtk.utils.Interval([0.0,12.0])
				precision = java.lang.Double(0.001)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String(m/s)
			field visualFieldAngle
				description = java.lang.String()				
				interval = fr.cnrs.iees.omhtk.utils.Interval([0.0,360.0])
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String(°)
			field range
				description = java.lang.String(radius of local group)
				interval = fr.cnrs.iees.omhtk.utils.Interval([0.0,20.0])
				precision = java.lang.Double(0.001)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String(m)
		record drv
			dynamic = java.lang.Boolean(true)
			generatedClassName = java.lang.String(drv)
			field vy
				description = java.lang.String(velocity in Y)
				interval = fr.cnrs.iees.omhtk.utils.Interval([0.0,+∞[)
				precision = java.lang.Double(0.001)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String(m/s)
			field vx
				description = java.lang.String(velocity in X)
				interval = fr.cnrs.iees.omhtk.utils.Interval([0.0,+∞[)
				precision = java.lang.Double(0.001)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String(m/s)
			field ay
				description = java.lang.String()				
				interval = fr.cnrs.iees.omhtk.utils.Interval(]-∞,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
			field ax
				description = java.lang.String()
				interval = fr.cnrs.iees.omhtk.utils.Interval(]-∞,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
			field y
				description = java.lang.String()
				interval = fr.cnrs.iees.omhtk.utils.Interval(]-∞,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
			field x
				description = java.lang.String()
				interval = fr.cnrs.iees.omhtk.utils.Interval(]-∞,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
	experiment expt
		design dsgn
			type = fr.cnrs.iees.twcore.constants.ExperimentDesignType(singleRun)
	system sys1
		constantClass = java.lang.String(code.sys1.generated.Cnt)
		dynamics sim1
			timeline tmLn1
				longestTimeUnit = fr.cnrs.iees.twcore.constants.TimeUnits(SECOND)
				scale = fr.cnrs.iees.twcore.constants.TimeScaleType(MONO_UNIT)
				shortestTimeUnit = fr.cnrs.iees.twcore.constants.TimeUnits(SECOND)
				timeOrigin = fr.cnrs.iees.twcore.constants.DateTimeType(0)
				timer clock1
					dt = java.lang.Long(1)
					nTimeUnits = java.lang.Integer(1)
					subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.timer.ClockTimer)
					timeUnit = fr.cnrs.iees.twcore.constants.TimeUnits(SECOND)
					process p2b
						function PrepareMove
							functionSnippet = au.edu.anu.omugi.collections.tables.StringTable(([11]"		focalDec.nLocal++;","		// alignment","		focalDec.sumdX += other_vx;","		focalDec.sumdY += other_vy;","		// cohesion","		focalDec.sumX += other_x;","		focalDec.sumY += other_y;","		// separation","		double dist = euclidianDistance(x,y,other_x,other_y);","		focalDec.sepX += (x-other_x)/dist;","		focalDec.sepY += (y-other_y)/dist;"))
							type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(ChangeRelationState)
							userClassName = java.lang.String(code.sys1.generated.PrepareMove)
					process p3
						function Move
							functionSnippet = au.edu.anu.omugi.collections.tables.StringTable(([71]"	// code reproduced from: https://betterprogramming.pub/boids-simulating-birds-flock-behavior-in-python-9fff99375118","		double spdX = vx;","		double spdY = vy;","		double accX = ax;","		double accY = ay;","		// alignment","		double alignmentX = (random.nextDouble()-0.5)*maxForce/10;","		double alignmentY = (random.nextDouble()-0.5)*maxForce/10;","		if (nLocal>0) {","			double norm = Math.sqrt(sumOfSquares(sumdX,sumdY));","			double avgvx = sumdX/nLocal /norm *maxSpeed;","			double avgvy = sumdY/nLocal /norm *maxSpeed;","			alignmentX = avgvx-vx;","			alignmentY = avgvy-vy;","		}","		double cohesionX = 0;","		double cohesionY = 0;","		// cohesion","		if (nLocal>0) {","			// distance to flock barycentre","			double barX = sumX/nLocal-x;","			double barY = sumY/nLocal-y;","			double norm = Math.sqrt(sumOfSquares(barX,barY));","			if (norm>0) { // if non zero net move","				barX = barX/norm*maxSpeed;","				barY = barY/norm*maxSpeed;","			}","			cohesionX = barX-vx;","			cohesionY = barY-vy;","			norm = Math.sqrt(sumOfSquares(cohesionX,cohesionY));","			if (norm>maxForce) {","				cohesionX = cohesionX/norm*maxForce;","				cohesionY = cohesionY/norm*maxForce;","			}","		}","		// separation","		double separationX = 0;","		double separationY = 0;","		if (nLocal>0) {","			double fleeX = sepX/nLocal;","			double fleeY = sepY/nLocal;","			double norm = Math.sqrt(sumOfSquares(fleeX,fleeY));","			if (norm>0 ) {","				fleeX = fleeX/norm*maxSpeed;","				fleeY = fleeY/norm*maxSpeed;","			}","			separationX = fleeX-vx;","			separationY = fleeY-vy;","			norm = Math.sqrt(sumOfSquares(separationX,separationY));","			if (norm>maxForce) {","				separationX = separationX/norm*maxForce;","				separationY = separationY/norm*maxForce;","			}","		}","		// update to next step","		accX += alignmentX + cohesionX + separationX;","		accY += alignmentY + cohesionY + separationY;","		focalDrv.x = x+spdX;","		focalDrv.y = y+spdY;","		// apply speed limit - not needed if initial speed is < max speed. ","		double v = Math.sqrt(sumOfSquares(vx+accX,vy+accY));","		if (v>maxSpeed) { ","			focalDrv.vx = (spdX+accX)/v*maxSpeed;","			focalDrv.vy = (spdY+accY)/v*maxSpeed;","		}","		else {","			focalDrv.vx = spdX+accX;","			focalDrv.vy = spdY+accY;","		}","		focalDrv.ax = 0;","		focalDrv.ay = 0;"))
							type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(ChangeState)
							userClassName = java.lang.String(code.sys1.generated.Move)
					process p2
						function Follow
							functionSnippet = au.edu.anu.omugi.collections.tables.StringTable(([3]"		if (squaredEuclidianDistance(x,y,other_x,other_y)<sqr(range))","			return true;","		return false;"))
							type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(MaintainRelationDecision)
							userClassName = java.lang.String(code.sys1.generated.Follow)
					process p1
						function Detect
							functionSnippet = au.edu.anu.omugi.collections.tables.StringTable(([3]"		if (squaredEuclidianDistance(x,y,other_x,other_y)<sqr(range))","			return true;","		return false;"))
							type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(RelateToDecision)
							userClassName = java.lang.String(code.sys1.generated.Detect)
		structure struc1
			fixedPoints = DoubleTable(([1]0.0))
			componentType bird
				decoratorClass = java.lang.String(code.sys1.generated.Dec)
				driverClass = java.lang.String(code.sys1.generated.Drv)
				lifeSpan = fr.cnrs.iees.twcore.constants.LifespanType(permanent)
				mobile = java.lang.Boolean(false)
				relocateFunctionName = au.edu.anu.omugi.collections.tables.StringTable(([1]""))
				initFunction Init1
					functionSnippet = au.edu.anu.omugi.collections.tables.StringTable(([6]"		focalDrv.x = random.nextDouble()*1000.0;","		focalDrv.y = random.nextDouble()*1000.0;","		focalDrv.vx = (random.nextDouble()-0.5)*10; // max speed","		focalDrv.vy = (random.nextDouble()-0.5)*10; // max speed","		focalDrv.ax = (random.nextDouble()-0.5)*1.0; // maxForce","		focalDrv.ay = (random.nextDouble()-0.5)*1.0; // maxForce"))
					type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(SetInitialState)
					userClassName = java.lang.String(code.sys1.generated.Init1)
				initialValues cmp1
					nInstances = java.lang.Integer(250)
			space space1
				borderType = fr.cnrs.iees.twcore.constants.BorderListType(([4]"wrap","wrap","wrap","wrap"))
				guardAreaWidth = java.lang.Double(0.0)
				precision = java.lang.Double(1.0)
				type = fr.cnrs.iees.twcore.constants.SpaceType(continuousFlatSurface)
				units = java.lang.String(m)
				x-limits = fr.cnrs.iees.omhtk.utils.Interval([0.0,1000.0])
				y-limits = fr.cnrs.iees.omhtk.utils.Interval([0.0,1000.0])
			relationType sight
				lifeSpan = fr.cnrs.iees.twcore.constants.LifespanType(ephemeral)
		initialValues initVals1
			maxForce = java.lang.Double(1.0)
			maxSpeed = java.lang.Double(10.0)
			range = java.lang.Double(40.0)
			safetyRange = java.lang.Double(20.0)
			visualFieldAngle = java.lang.Double(360.0)
	userInterface gui
		top top
			widget timer
				layoutOrder = java.lang.Integer(1)
				simId = java.lang.Integer(0)
				subclass = java.lang.String(au.edu.anu.twuifx.widgets.ProgressWidget1)
			widget ctrl
				layoutOrder = java.lang.Integer(0)
				subclass = java.lang.String(au.edu.anu.twuifx.widgets.ControlWidget1)
		tab space
			orientation = fr.cnrs.iees.twcore.constants.UIContainerOrientation(horizontal)
			widget wgt1
				layoutOrder = java.lang.Integer(0)
				simId = java.lang.Integer(0)
				subclass = java.lang.String(au.edu.anu.twuifx.widgets.SpaceWidget1)

// CROSS-LINKS
[componentType:bird] belongsTo bt6 [category:*permanent*]
[componentType:bird] belongsTo bt5 [category:*component*]
[componentType:bird] belongsTo bt4 [category:*atomic*]
[relationType:sight] fromCategory from1 [category:*atomic*]
[relationType:sight] toCategory to1 [category:*atomic*]
[category:*atomic*] drivers  [record:drv]
[category:*atomic*] decorators decs1 [record:dec]
[system:sys1] belongsTo bt3 [category:*permanent*]
[system:sys1] belongsTo bt2 [category:*assemblage*]
[system:sys1] belongsTo bt1 [category:*arena*]
[widget:wgt1] trackSpace trks2 [space:space1]
[process:p1] appliesTo aplyTo1 [relationType:sight]
[process:p1] inSpace in1 [space:space1]
	searchRadius = java.lang.Double(100.0)
[process:p2] appliesTo aplyTo2 [relationType:sight]
[process:p2] inSpace in2 [space:space1]
	searchRadius = java.lang.Double(100.0)
[process:p3] inSpace in3 [space:space1]
	searchRadius = java.lang.Double(100.0)
[process:p3] dependsOn depsOn1 [process:p2b]
[process:p3] appliesTo aplyTo3 [category:*atomic*]
[widget:timer] trackTime trks1 [dynamics:sim1]
[category:*ephemeral*] autoVar auto1 [record:AVEphemeral]
[category:*assemblage*] autoVar auto [record:AVPopulation]
[process:p2b] dependsOn depsOn2 [process:p1]
[process:p2b] dependsOn depsOn3 [process:p2]
[process:p2b] appliesTo aplyTo4 [relationType:sight]
[category:*arena*] constants cnsts1 [record:cnt]
[space:space1] coordinate crdmp [field:x]
	rank = java.lang.Integer(0)
[space:space1] coordinate crdmp1 [field:y]
	rank = java.lang.Integer(1)